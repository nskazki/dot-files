#! /usr/bin/env bash
function npm-ln {
  if [[ -z "$1" || ("$1" == '--help') || ("$1" == '-h') ]]; then
    echo -e "usage: npm-ln <package-name>"
    return
  fi

  [ $(which npm-which) ] || npm i -g npm-which

  local path="$(npm-which "$1" 2>&1)"
  if [ -z "$(echo $path | grep " not found")" ]; then
    echo "$path -> /usr/bin/$1"
    sudo ln -s -f "$path" "/usr/bin/$1"
  else
    echo "$1 - not found"
    local variants="$(ls $(npm -g root) | grep -i -P "$1" | sed ':a;N;$!ba;s/\n/, /g')"
    [ -n "$variants" ] && echo "variants: $variants"
  fi
}

function npmignore-test {
  if [[ ("$1" == '--help') || ("$1" == '-h') ]]; then
    echo -e 'It shows the files destined for publication'
    echo -e 'example tree:
    .
    ├── example
    │   └── index.es6
    ├── package.json
    ├── README.md
    ├── src
    │   └── index.es6
    ├── src-build
    │   └── index.js
    └── test
        ├── mocha.opts
        └── test.es6'
    echo -e 'example usage: npmignore-test <path-to-prj-dir>'
    echo -e 'example result:
    -rw-rw-r-- 1000/1000      1374 2016-05-17 13:39 package/package.json
    -rw-rw-r-- 1000/1000      2786 2016-05-17 13:41 package/src-build/index.js'
    return
  fi;

  local dir=$([ -n "$1" ] && echo "$1" || echo "$PWD")
  cd "$dir"
  npm pack "$dir" && tar -tvf *.tgz && rm *.tgz
  cd -
}

function inotify-fix {
  echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
}

function mysql-client {
  if [[ ("$1" == '--help') || ("$1" == '-h') || (-z "$1") ]]; then
    echo -e "usage: mysql-client mysql://user:password@127.0.0.1:3307/seo"
    return
  fi

  local proto="$(echo $1 | grep :// | sed -e's,^\(.*://\).*,\1,g')"
  local url="$(echo ${1/$proto/})"
  local rawuser="$(echo $url | grep @ | cut -d@ -f1)"
  local rawhost="$(echo ${url/$rawuser@/} | cut -d/ -f1)"
  local path="$(echo $url | grep / | cut -d/ -f2-)"

  local pass="$(echo $rawuser | grep -oP ':.+' | sed 's/://g')"
  local user="$(echo $rawuser | grep -oP '.+:' | sed 's/://g')"
  local host="$(echo $rawhost | grep -oP '.+:' | sed 's/://g')"
  local port="$(echo $rawhost | grep -oP ':.+' | sed 's/://g')"
  if [[ -z "$host" ]]; then local host=$rawhost; fi
  if [[ -z "$port" ]]; then local port=3306; fi

  echo $proto $user $pass $host $port $path
  mysql -u $user -p$pass -h $host -P $port -D $path
}

function rand-pass {
  echo $(cat /dev/urandom \
    | tr -dc a-zA-Z0-9 \
    | fold -w 12 \
    | head -n 1)
}

function rand-port {
  echo $(netstat -atn \
    | awk ' /tcp/ {printf("%s\n",substr($4,index($4,":")+1,length($4) )) }' \
    | sed -e "s/://g" \
    | sort -rnu \
    | awk '{array [$1] = $1} END {i=32768; again=1; while (again == 1) {if (array[i] == i) {i=i+1} else {print i; again=0}}}')
}

function pipe {
  local import_aliases="source $HOME/.scripts/bash-aliases"
  local user_input="$*"

  if [ -z "$(echo "$user_input" | grep "{}")" ]; then
    local placeholder="{}"
  else
    local placeholder=""
  fi

  xargs -i bash -c "$import_aliases && $user_input $placeholder"
}

function rscp {
  if [[ "$1" == "--help" || "$1" == "-h" || -z "$1" || -z "$2" ]]; then
    echo "usage: rscp xyn.lan:$PWD/node.js $PWD/"
    echo "#      from                 to"
    echo "usage: rscp $PWD/node.js xyn.lan:$PWD/"
    return 1
  fi
  rsync -avW -e ssh "$1" "$2"
}

function curl-code {
  curl -L -s -o /dev/null -w '%{http_code} %{url_effective}\n' $@
}

# row
for r in {1..9}; do
  alias row$r="awk '{ print \$$r }'"
  alias r$r="row$r"
done

# line
for l in {1..9}; do
  alias line$l="head -n $l | tail -n 1"
  alias l$l="line$l"
done

# matrix
for l in {1..9}; do
  for r in {1..9}; do
    alias matrix$l$r="l$l | r$r"
    alias m$l$r="l$l | r$r"
  done
done
#
