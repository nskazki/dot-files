#! /usr/bin/env bash


# GIT heart FZF
# -------------

is_in_git_repo() {
  git rev-parse HEAD > /dev/null 2>&1
}

gf() {
  is_in_git_repo || return
  git -c color.status=always status --short | sed 's/"//g' |
  fzf --multi \
    --bind 'ctrl-b:preview-up+preview-up+preview-up' \
    --bind 'ctrl-f:preview-down+preview-down+preview-down' \
    --bind 'ctrl-k:preview-up' \
    --bind 'ctrl-j:preview-down' \
    --preview 'export NOT_STAGED="$(git diff --color=always -- {2..-1} | sed 1,4d;)" && [[ -n "$NOT_STAGED" ]] && echo -e "\e[1;44m    NOT STAGED    \e[0m    \e[0m" && echo "$NOT_STAGED"; \
               export STAGED="$(git diff --staged --color=always -- {2..-1} | sed 1,4d;)" && [[ -n "$STAGED" ]] && echo -e "\e[0;94m\e[1;107m    STAGED    \e[0m" && echo "$STAGED"; \
               [[ -z "$NOT_STAGED" ]] && [[ -z "$STAGED" ]] && echo -e "\e[1;41m    FILE    \e[0m" && \
                ((echo $(basename {2..-1}) | grep .svg > /dev/null 2>&1 && rsvg {2..-1} tmp/preview.png && img2txt tmp/preview.png) \
                  || (file --mime {2..-1} | grep image > /dev/null 2>&1 && img2txt {2..-1}) \
                  || (file --mime {2..-1} | grep binary > /dev/null 2>&1 && echo {2..-1} is a binary file) \
                  || (highlight -O ansi -l {} || coderay {2..-1} || cat {2..-1})) 2> /dev/null | head -n 500' |
  cut -c4- | sed 's/.* -> //' | sed 's/\s/\\ /g'
}

gb() {
  is_in_git_repo || return
  git branch -a --color=always | grep -v '/HEAD\s' | sort |
  fzf --multi --tac \
    --bind 'ctrl-k:preview-up' \
    --bind 'ctrl-j:preview-down' \
    --preview 'git log --graph --color=always --date=format:"%Y-%m-%d" --abbrev-commit --format="%C(blue)%ad %C(yellow)%h%C(auto)%d %C(reset)%s %C(green)[%an]" $(cut -c 3- <<< {}) | head -n 100' |
  sed 's/^..//' | cut -d' ' -f1 |
  sed 's#^remotes/##'
}

gt() {
  is_in_git_repo || return
  git tag --sort -version:refname |
  fzf --multi \
    --bind 'ctrl-k:preview-up' \
    --bind 'ctrl-j:preview-down' \
    --preview 'git show --color=always {}'
}

gh() {
  is_in_git_repo || return
  git log --graph --color=always --date=format:"%Y-%m-%d" --abbrev-commit --format="%C(blue)%ad %C(yellow)%h%C(auto)%d %C(reset)%s %C(green)[%an]" |
  fzf --no-sort --multi \
    --bind 'ctrl-s:toggle-sort' \
    --bind 'ctrl-b:preview-up+preview-up+preview-up' \
    --bind 'ctrl-f:preview-down+preview-down+preview-down' \
    --bind 'ctrl-k:preview-up' \
    --bind 'ctrl-j:preview-down' \
    --header 'Press CTRL-S to toggle sort' \
    --preview 'git show --stat --color=always {3} && echo && git diff --color=always --ignore-all-space {3}^..{3} ' |
  grep -o "[a-f0-9]\{7,\}"
}

if [ -n "$PS1" ]; then
  bind '"\er": redraw-current-line'
  bind '"\C-g\C-f": "$(gf)\e\C-e\er"'
  bind '"\C-g\C-b": "$(gb)\e\C-e\er"'
  bind '"\C-g\C-t": "$(gt)\e\C-e\er"'
  bind '"\C-g\C-h": "$(gh)\e\C-e\er"'
fi
