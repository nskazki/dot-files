#! /usr/bin/env bash


# GIT heart FZF
# -------------

is_in_git_repo() {
  git rev-parse HEAD > /dev/null 2>&1
}

fzf-down() {
  if [ $TERM_VIEW -eq 0 ]; then
    fzf --height 70% "$@"
  else
    fzf "$@"
  fi
}

gf() {
  is_in_git_repo || return
  git -c color.status=always status --short |
  fzf-down --reverse --multi --ansi --nth 2..,.. --preview-window right:70% \
    --bind 'ctrl-k:preview-up' \
    --bind 'ctrl-j:preview-down' \
    --preview '(git diff --color=always -- {-1} | sed 1,4d; cat {-1}) | head -500' |
  cut -c4- | sed 's/.* -> //'
}

gb() {
  is_in_git_repo || return
  git branch -a --color=always | grep -v '/HEAD\s' | sort |
  fzf-down --ansi --reverse --multi --tac --preview-window right:70% \
    --bind 'ctrl-k:preview-up' \
    --bind 'ctrl-j:preview-down' \
    --preview 'git log --graph --color=always --date=format:"%Y-%m-%d" --abbrev-commit --format="%C(blue)%ad %C(yellow)%h%C(auto)%d %C(reset)%s %C(green)[%an]" $(sed s/^..// <<< {} | cut -d" " -f1) | head -'$LINES |
  sed 's/^..//' | cut -d' ' -f1 |
  sed 's#^remotes/##'
}

gt() {
  is_in_git_repo || return
  git tag --sort -version:refname |
  fzf-down --reverse --multi --preview-window right:70% \
    --bind 'ctrl-k:preview-up' \
    --bind 'ctrl-j:preview-down' \
    --preview 'git show --color=always {} | head -'$LINES
}

gh() {
  is_in_git_repo || return
  git log --graph --color=always --date=format:"%Y-%m-%d" --abbrev-commit --format="%C(blue)%ad %C(yellow)%h%C(auto)%d %C(reset)%s %C(green)[%an]" |
  fzf-down --ansi --no-sort --reverse --multi \
    --bind 'ctrl-s:toggle-sort' \
    --bind 'ctrl-k:preview-up' \
    --bind 'ctrl-j:preview-down' \
    --header 'Press CTRL-S to toggle sort' \
    --preview 'hash() { echo $1 | grep -o "[a-f0-9]\{7,\}"; }; git show --stat --color=always $(hash {}) && echo && git diff --color=always --ignore-all-space $(hash {})^..$(hash {}) ' |
  grep -o "[a-f0-9]\{7,\}"
}

bind '"\er": redraw-current-line'
bind '"\C-g\C-f": "$(gf)\e\C-e\er"'
bind '"\C-g\C-b": "$(gb)\e\C-e\er"'
bind '"\C-g\C-t": "$(gt)\e\C-e\er"'
bind '"\C-g\C-h": "$(gh)\e\C-e\er"'
