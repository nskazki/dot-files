#!/bin/bash
#
# Constants and functions for terminal colors.
# Author: Max Tsepkov <max@yogi.pw>
# Some features by nskazki@gmail.com

CLR_ESC="\033["

# All these variables has a function with the same name, but in lower case.
#
CLR_RESET=0             # reset all attributes to their defaults
CLR_RESET_UNDERLINE=24  # underline off
CLR_RESET_REVERSE=27    # reverse off
CLR_DEFAULT=39          # set underscore off, set default foreground color
CLR_DEFAULTB=49         # set default background color

CLR_BOLD=1              # set bold
CLR_BRIGHT=2            # set half-bright (simulated with color on a color display)
CLR_UNDERSCORE=4        # set underscore (simulated with color on a color display)
CLR_REVERSE=7           # set reverse video

CLR_BLACK=30            # set black foreground
CLR_RED=31              # set red foreground
CLR_GREEN=32            # set green foreground
CLR_BROWN=33            # set brown foreground
CLR_BLUE=34             # set blue foreground
CLR_MAGENTA=35          # set magenta foreground
CLR_CYAN=36             # set cyan foreground
CLR_WHITE=37            # set white foreground

CLR_BLACKB=40           # set black background
CLR_REDB=41             # set red background
CLR_GREENB=42           # set green background
CLR_BROWNB=43           # set brown background
CLR_BLUEB=44            # set blue background
CLR_MAGENTAB=45         # set magenta background
CLR_CYANB=46            # set cyan background
CLR_WHITEB=47           # set white background

CLR_BLACKI=90            # set ture bright black foreground
CLR_REDI=91              # set ture bright red foreground
CLR_GREENI=92            # set ture bright green foreground
CLR_BROWNI=93            # set ture bright brown foreground
CLR_BLUEI=94             # set ture bright blue foreground
CLR_MAGENTAI=95          # set ture bright magenta foreground
CLR_CYANI=96             # set ture bright cyan foreground
CLR_WHITEI=97            # set ture bright white foreground

# General function to wrap string with escape sequence(s).
# Ex: clr_escape foobar $CLR_RED $CLR_BOLD
function clr_escape
{
    local result="$1"
    until [ -z "$2" ]; do
	if ! [ $2 -ge 0 -a $2 -le 97 ] 2>/dev/null; then
	    echo "clr_escape: argument \"$2\" is out of range" >&2 && return 1
	fi
        result="${CLR_ESC}${2}m${result}${CLR_ESC}${CLR_RESET}m"
	shift || break
    done

    echo -e "$result"
}

function clr_reset           { clr_escape "$1" $CLR_RESET;           }
function clr_reset_underline { clr_escape "$1" $CLR_RESET_UNDERLINE; }
function clr_reset_reverse   { clr_escape "$1" $CLR_RESET_REVERSE;   }
function clr_default         { clr_escape "$1" $CLR_DEFAULT;         }
function clr_defaultb        { clr_escape "$1" $CLR_DEFAULTB;        }
function clr_bold            { clr_escape "$1" $CLR_BOLD;            }
function clr_b               { clr_escape "$1" $CLR_BOLD;            }
function clr_bright          { clr_escape "$1" $CLR_BRIGHT;          }
function clr_i               { clr_escape "$1" $CLR_BRIGHT;          }
function clr_underscore      { clr_escape "$1" $CLR_UNDERSCORE;      }
function clr_u               { clr_escape "$1" $CLR_UNDERSCORE;      }
function clr_reverse         { clr_escape "$1" $CLR_REVERSE;         }

function clr_black           { clr_escape "$1" $CLR_BLACK;           }
function clr_red             { clr_escape "$1" $CLR_RED;             }
function clr_green           { clr_escape "$1" $CLR_GREEN;           }
function clr_brown           { clr_escape "$1" $CLR_BROWN;           }
function clr_yellow          { clr_escape "$1" $CLR_BROWN;           }
function clr_blue            { clr_escape "$1" $CLR_BLUE;            }
function clr_magenta         { clr_escape "$1" $CLR_MAGENTA;         }
function clr_cyan            { clr_escape "$1" $CLR_CYAN;            }
function clr_white           { clr_escape "$1" $CLR_WHITE;           }

function clr_black_i         { clr_escape "$1" $CLR_BLANKI;          }
function clr_red_i           { clr_escape "$1" $CLR_REDI;            }
function clr_green_i         { clr_escape "$1" $CLR_GREENI;          }
function clr_brown_i         { clr_escape "$1" $CLR_BROWNI;          }
function clr_yellow_i        { clr_escape "$1" $CLR_BROWNI;          }
function clr_blue_i          { clr_escape "$1" $CLR_BLUEI;           }
function clr_magenta_i       { clr_escape "$1" $CLR_MAGENTAI;        }
function clr_cyan_i          { clr_escape "$1" $CLR_CYANI;           }
function clr_white_i         { clr_escape "$1" $CLR_WHITEI;          }

function clr_black_b         { clr_b "$(clr_escape "$1" $CLR_BLACK)";   }
function clr_red_b           { clr_b "$(clr_escape "$1" $CLR_RED)";     }
function clr_green_b         { clr_b "$(clr_escape "$1" $CLR_GREEN)";   }
function clr_brown_b         { clr_b "$(clr_escape "$1" $CLR_BROWN)";   }
function clr_yellow_b        { clr_b "$(clr_escape "$1" $CLR_BROWN)";   }
function clr_blue_b          { clr_b "$(clr_escape "$1" $CLR_BLUE)";    }
function clr_magenta_b       { clr_b "$(clr_escape "$1" $CLR_MAGENTA)"; }
function clr_cyan_b          { clr_b "$(clr_escape "$1" $CLR_CYAN)";    }
function clr_white_b         { clr_b "$(clr_escape "$1" $CLR_WHITE)";   }

function clr_bg_black        { clr_escape "$1" $CLR_BLACKB;          }
function clr_bg_red          { clr_escape "$1" $CLR_REDB;            }
function clr_bg_green        { clr_escape "$1" $CLR_GREENB;          }
function clr_bg_brown        { clr_escape "$1" $CLR_BROWNB;          }
function clr_bg_yellow       { clr_escape "$1" $CLR_BROWNB;          }
function clr_bg_blue         { clr_escape "$1" $CLR_BLUEB;           }
function clr_bg_magenta      { clr_escape "$1" $CLR_MAGENTAB;        }
function clr_bg_cyan         { clr_escape "$1" $CLR_CYANB;           }
function clr_bg_white        { clr_escape "$1" $CLR_WHITEB;          }

function clr_bg_black_b      { clr_b "$(clr_escape "$1" $CLR_BLACKB)";   }
function clr_bg_red_b        { clr_b "$(clr_escape "$1" $CLR_REDB)";     }
function clr_bg_green_b      { clr_b "$(clr_escape "$1" $CLR_GREENB)";   }
function clr_bg_brown_b      { clr_b "$(clr_escape "$1" $CLR_BROWNB)";   }
function clr_bg_yellow_b     { clr_b "$(clr_escape "$1" $CLR_BROWNB)";   }
function clr_bg_blue_b       { clr_b "$(clr_escape "$1" $CLR_BLUEB)";    }
function clr_bg_magenta_b    { clr_b "$(clr_escape "$1" $CLR_MAGENTAB)"; }
function clr_bg_cyan_b       { clr_b "$(clr_escape "$1" $CLR_CYANB)";    }
function clr_bg_white_b      { clr_b "$(clr_escape "$1" $CLR_WHITEB)";   }

# Outputs colors table
function clr_dump
{
    local T='gYw'

    echo -e "\n                 40m     41m     42m     43m     44m     45m     46m     47m";

    for FGs in '   0m' '   1m' \
               '  30m' '  90m' '1;30m' '2;30m' \
               '  31m' '  91m' '1;31m' '2;31m' \
               '  32m' '  92m' '1;32m' '2;32m' \
               '  33m' '  93m' '1;33m' '2;33m' \
               '  34m' '  94m' '1;34m' '2;34m' \
               '  35m' '  95m' '1;35m' '2;35m' \
               '  36m' '  96m' '1;36m' '2;36m' \
               '  37m' '  97m' '1;37m' '2;37m';
    do
        FG=${FGs// /}
        echo -en " $FGs \033[$FG  $T  "
        for BG in 40m 41m 42m 43m 44m 45m 46m 47m; do
            echo -en " \033[$FG\033[$BG  $T  \033[0m";
        done
        echo;
    done

    echo
    clr_bold "    Code     Function           Variable"
    echo \
'    0        clr_reset          $CLR_RESET
    1        clr_bold           $CLR_BOLD
    2        clr_bright         $CLR_BRIGHT
    4        clr_underscore     $CLR_UNDERSCORE
    7        clr_reverse        $CLR_REVERSE

    30       clr_black          $CLR_BLACK
    31       clr_red            $CLR_RED
    32       clr_green          $CLR_GREEN
    33       clr_brown          $CLR_BROWN
    34       clr_blue           $CLR_BLUE
    35       clr_magenta        $CLR_MAGENTA
    36       clr_cyan           $CLR_CYAN
    37       clr_white          $CLR_WHITE

    40       clr_bg_black       $CLR_BLACKB
    41       clr_bg_red         $CLR_REDB
    42       clr_bg_green       $CLR_GREENB
    43       clr_bg_brown       $CLR_BROWNB
    44       clr_bg_blue        $CLR_BLUEB
    45       clr_bg_magenta     $CLR_MAGENTAB
    46       clr_bg_cyan        $CLR_CYANB
    47       clr_bg_white       $CLR_WHITEB
'
}

function clr {
    local cmd="clr_$1"
    for ((i=2; i<=(($#-1)); i++)); do
        cmd="$cmd \"\$(clr_${!i}"
    done
    cmd="$cmd \"${!#}\""
    for ((i=2; i<=(($#-1)); i++)); do
        cmd="$cmd )\""
    done

    bash -c "source ~/.bash-tools/bash-clr && $cmd"
}
