[user]
  name = Nikita Skazki
  email = nskazki@gmail.com

[alias]
  # base
  unstage = "reset HEAD" # https://git-scm.com/book/en/v2/Git-Tools-Reset-Demystified#_reset_with_a_path
  recommit = "commit --amend"
  uncommit = "!f() { \
    rm -f \"$(git git-dir)/.uncommit_cnt\"; \
    git log -1 --pretty=%B > \"$(git git-dir)/.uncommit_msg\"; \
    git reset --soft HEAD^; \
  }; f"

  recreate-conflict = "checkout --conflict=diff3"

  # paths
  root = "rev-parse --show-toplevel"
  git-dir = "rev-parse --git-dir"

  # delete
  tag-delete = "!f() { git tag -d $1; git push origin :refs/tags/$1; }; f"
  branch-delete = "!f() { git branch -D $1; git push origin --delete $1; }; f"

  # logs
  log-hist = "log --graph --color=always --date=format:'%Y-%m-%d %H:%M' --format='%C(magenta)%h%C(reset) %C(blue)%ad%C(reset) %C(green)%an%C(reset) %s%C(auto)%d%C(reset)'"
  log-last = "!git --no-pager log-hist -n 10"

  # verbose
  branch-verbose = "branch -av"
  remote-verbose = "remote -v"

  # status
  status-short = "status -s"

  # diff
  diff-staged = "diff --staged"

  # viewcommit
  view-commit-head = "show --color=always --pretty=fuller --root --stat"
  view-commit = "!f() { \
    if [[ "$(git show --no-patch --pretty=%P "$@")" != *' '* ]]; then \
      git view-commit-head --patch "$@"; \
    else \
      (git view-commit-head "$@"; git show --pretty="" --patch --remerge-diff --color=always "$@"; git show --pretty="" --patch --first-parent --color=always "$@" | ~/.scripts/diffr-with-custom-colors.sh) | ~/.scripts/less-with-total-lines.sh; \
    fi; \
  }; f"

  # branch
  branch-name = "rev-parse --abbrev-ref HEAD"
  branch-rename = "branch -m"

[core]
  autocrlf = input
  safecrlf = true
  ignorecase = true
  editor = micro

[core]
  # https://github.com/git/git/blob/master/contrib/diff-highlight
  # https://github.com/dandavison/delta
  # https://github.com/mookid/diffr
  pager = ~/.scripts/diffr-with-custom-colors.sh | ~/.scripts/less-with-total-lines.sh

[am]
  threeWay = true

[add "interactive"]
  useBuiltin = true

[apply]
  whitespace = fix

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green

[color "diff"]
  meta = yellow bold
  frag = magenta bold # line info
  old = red # deletions
  new = green # additions

[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[diff]
  renames = copies
  algorithm = minimal

[merge]
  ff = false
  log = true
  autostash = true
  conflictstyle = diff3

[pull]
  ff = only

[push]
  default = simple
  followTags = true
  autoSetupRemote = true

[rebase]
  autostash = true
  autosquash = false
  updateRefs = false # https://andrewlock.net/working-with-stacked-branches-in-git-is-easier-with-update-refs/
  missingCommitsCheck = error

[status]
  relativePaths = false
  showUntrackedFiles = all

[stash]
  showPatch = true

[commit]
  verbose = true

[fetch]
  prune = true
  pruneTags = true

[rerere]
  enabled = true
  autoupdate = true

[cola]
  spellcheck = false
  theme = flat-light-blue
  icontheme = light
  fontdiff = Hack,14,-1,5,50,0,0,0,0,0

[difftool "Kaleidoscope"]
	cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"

[mergetool "Kaleidoscope"]
	cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
	trustExitCode = true
